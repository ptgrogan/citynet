%% Hydropower Station Class Definition
% 06-September, 2011
% Adedamola Adepetu, aadepetu@masdar.ac.ae
%%
classdef HydropowerStation < Behavior
    properties
        plant_type;
        head;
        inlet_water_speed;
        outlet_water_speed;
        volumetric_flow_rate;
        plant_efficiency;
        plant_capacity;
        capacity_factor;
        annual_energy_generated;
        annual_emissions_CO2;
        resource_use;
        finance;


        
    end
    methods
        function obj = HydropowerStation()
            obj = obj@Behavior('Hydropower station', ...
                'Estimates the energy generated by a hydropower station and its capacity', ...
                'MWh','[0,inf)');
        end
        
%         function PlotCellBiomassEnergy(obj)
%             figure
%             title(['Biomass Energy (' obj.units ')'])
%             obj.PlotCellValueMap(obj.annual_energy_generated)
%         end
    end
    methods(Access=protected)
        %% EvaluateImpl Function
        
        function val = EvaluateImpl(obj)      
            
            % Set city identifier
            city = CityNet.instance().city;
            
            % Search for energy system identifier       
            for i = 1:length(city.systems)
                if strcmp(city.systems(i).name,'Energy')==1
                    sys_index = i;
                    break
                end
            end      
            
            % Search for Hydropower Station identifier in Energy Layer
            for i = 1:length(city.systems(sys_index).nodes)
                if strcmp(city.systems(sys_index).nodes(i).type.name,'Hydropower Station')
                    % Store node ID
                    node_index = i;
                    break
                end
            end          
            
            % Set hydropower Station Identifier
            hydropower = city.systems(sys_index).nodes(node_index);
            
            obj.plant_type = hydropower.GetNodeTypeAttributeValue('Plant Type');
            obj.head = hydropower.GetNodeTypeAttributeValue('Head');
            obj.inlet_water_speed = hydropower.GetNodeTypeAttributeValue('Inlet Water Speed');
            obj.outlet_water_speed = hydropower.GetNodeTypeAttributeValue('Outlet Water Speed');
            obj.volumetric_flow_rate = hydropower.GetNodeTypeAttributeValue('Volumetric Flow Rate');
            obj.plant_efficiency = hydropower.GetNodeTypeAttributeValue('Efficiency');
            obj.capacity_factor = hydropower.GetNodeTypeAttributeValue('Capacity factor');
            
            obj.plant_capacity = 0;
            if obj.plant_type == 1 % impoundment type
                obj.plant_capacity = 9.81*obj.head*obj.volumetric_flow_rate*obj.plant_efficiency/1000;
            elseif obj.plant_type == 2 % diversion/run of river type 
                obj.plant_capacity = (9.81*obj.head + 0.5*(obj.outlet_water_speed^2 - obj.inlet_water_speed^2))*obj.volumetric_flow_rate*obj.plant_efficiency/1000;
            end
            
            obj.annual_energy_generated = obj.plant_capacity*obj.capacity_factor*8760;
        
            obj.annual_emissions_CO2 = obj.annual_energy_generated*hydropower.GetNodeTypeAttributeValue('Specific CO2 Emissions')/1000; %Tonnes/year
            obj.finance.capex = hydropower.GetNodeTypeAttributeValue('Specific CAPEX') * obj.plant_capacity *1000; %$
            obj.finance.om = hydropower.GetNodeTypeAttributeValue('Specific O&M') * obj.plant_capacity *1000; %$
            obj.resource_use.land = hydropower.GetNodeTypeAttributeValue('Specific Land Use') * obj.plant_capacity; %m2
            obj.resource_use.water = hydropower.GetNodeTypeAttributeValue('Specific Water Use') * obj.annual_energy_generated;
            obj.resource_use.waste = 0;
            obj.resource_use.transport = 0;
            
            val = obj.annual_energy_generated;
            
        end
    end
end