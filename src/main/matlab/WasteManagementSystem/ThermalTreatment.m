%% ThermalTreatment Class Definition
% The ThermalTreatment behavior calculates the useable energy extracted
% from incineration, RDF burning, and PPDF burning. In addition, the amount
% of recovered ferrous metal is also calculated.
% The inputs to this object arise from the WasteSorting.m, MRFSorting.m,
% RDFSorting.m, and BiologicalTreatment.m objects.
% In addition, the amount of non-hazardous and hazardous residues is
% calculated. This residue is in turn sent to landfill
%
% 31-August, 2011
% Sydney Do, sydneydo@mit.edu
%%
classdef ThermalTreatment < Behavior
    properties
        restwaste_to_thermal;               % the additional restwaste added from the sorting process (function input)
        mrf_recyclables_to_PPDF;            % the input arising from fines generated during the MRF sorting process (function input)
        mrf_residues_to_thermal;            % residues generated by the materials recovery facility sent for thermal treatment (function input)
        cRDF_extracted;                     % cRDF extracted from the thermal treatment process (function input)
        dRDF_extracted;                     % dRDF extracted from the thermal treatment process (function input)
        bio_residues_to_thermal;            % residues from the biological treatment process sent to thermal treatment (function input)
        total_incineration_input;           % the total waste stream input to the incineration process (aggregated from restwaste_to_thermal, mrf_residues_to_thermal, and bio_residues_to_thermal)
        incineration_energy_output;         % the total energy extracted from the incineration process in kWh
        ferrous_metal_recovered;            % the ferrous metal recovered from the bottom ash generated by the incineration process (in tonnes)
        cRDF_energy_output;                 % the total energy extracted from cRDF burning in kWh
        dRDF_energy_output;                 % the total energy extracted from dRDF burning in kWh
        PPDF_energy_output;                 % the total energy extracted from PPDF burning in kWh
        non_hazardous_residues_to_landfill;	% non-hazardous thermal treatment residues generated. By default, these are sent to landfill
        hazardous_residues_to_landfill;     % hazardous thermal treatment residues generated. By default, these are sent to landfill
    end
    methods
        %% ThermalTreatment Constructor
        % Instantiates a new ThermalTreatment object.
        % 
        % obj = ThermalTreatment()
        %   obj:                                the new ThermalTreatment object
        %   restwaste_to_thermal:               the additional restwaste added from the sorting process (function input)
        %   mrf_recyclables_to_PPDF:            the input arising from fines generated during the RDF sorting process (function input)
        %   mrf_residues_to_thermal:            residues generated by the materials recovery facility sent for thermal treatment (function input)
        %   cRDF_extracted:                     cRDF extracted from the thermal treatment process (function input)
        %   dRDF_extracted:                     dRDF extracted from the thermal treatment process (function input)
        %   bio_residues_to_thermal:            residues from the biological treatment process sent to thermal treatment (function input)
        %   total_incineration_input:           the total waste stream input to the incineration process (aggregated from restwaste_to_thermal, mrf_residues_to_thermal, and bio_residues_to_thermal)
        %   incineration_energy_output:         the total energy extracted from the incineration process in kWh
        %   ferrous_metal_recovered:            the ferrous metal recovered from the bottom ash generated by the incineration process (in tonnes)
        %   cRDF_energy_output:                 the total energy extracted from cRDF burning in kWh
        %   dRDF_energy_output:                 the total energy extracted from dRDF burning in kWh
        %   PPDF_energy_output:                 the total energy extracted from PPDF burning in kWh
        %   non_hazardous_residues_to_landfill:	non-hazardous thermal treatment residues generated. By default, these are sent to landfill
        %   hazardous_residues_to_landfill:     hazardous thermal treatment residues generated. By default, these are sent to landfill
        
        function obj = ThermalTreatment()
            obj = obj@Behavior('Thermal Treatment', ...
                'Calculates the outputs of the thermal treatment (incineration, RDF burning, and PPDF burning) process', ...
                'tonnes','[0,inf)');
        end
    end
    methods(Access=protected)
        %% EvaluateImpl Function
        % Evaluates the behavior for a specified city. Note: the
        % superclass Evaluate function should be used for evaluation during
        % execution.
        %
        % val = obj.EvaluateImpl(city)
        %   val:    the evaluated value
        %   obj:    the TotalResidentialWaste object handle
        function val = EvaluateImpl(obj)      
            
            % Set city identifier
            city = CityNet.instance().city;
            
            % Search for waste system identifier       
            for i = 1:length(city.systems)
                if strcmp(city.systems(i).name,'Waste')==1
                    ind = i;
                    break
                end
            end      
            
            % Search for Materials Sorting Facility Identifier in Waste Layer
            for i = 1:length(city.systems(ind).nodes)
                if strcmp(city.systems(ind).nodes(i).type.name,'Thermal Treatment')
                    % Store node ID
                    ind2 = i;
                    break
                end
            end          
            
            % Set Materials Sorting Facility Identifier
            thermal = city.systems(ind).nodes(ind2);
                  
            %% Incineration Process
            % Determine incineration process input =
            % obj.restwaste_to_thermal + obj.bio_residues_to_thermal +
            % obj.mrf_residues_to_thermal
            
            %% Determine total input to incineration process treatment
            % Paper stream
            obj.total_incineration_input.paper = (obj.restwaste_to_thermal.paper+...
                obj.bio_residues_to_thermal.paper+obj.mrf_residues_to_thermal.paper)*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentPaper'));
            
            % Glass stream
            obj.total_incineration_input.glass = obj.restwaste_to_thermal.glass+...
                obj.bio_residues_to_thermal.glass+obj.mrf_residues_to_thermal.glass*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentGlass'));
            
            % Ferrous metal stream
            obj.total_incineration_input.fe_metal = obj.restwaste_to_thermal.fe_metal+...
                obj.bio_residues_to_thermal.fe_metal+obj.mrf_residues_to_thermal.fe_metal*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentFeMetal'));
                     
            % Non-Ferrous metal stream
            obj.total_incineration_input.nonfe_metal = obj.restwaste_to_thermal.nonfe_metal+...
                obj.bio_residues_to_thermal.nonfe_metal+obj.mrf_residues_to_thermal.nonfe_metal*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentNonFeMetal'));
            
            % Film plastic stream
            obj.total_incineration_input.filmplastic = obj.restwaste_to_thermal.filmplastic+...
                obj.bio_residues_to_thermal.filmplastic+obj.mrf_residues_to_thermal.filmplastic*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentFilmPlastic'));
            
            % Rigid plastic stream
            obj.total_incineration_input.rigidplastic = obj.restwaste_to_thermal.rigidplastic+...
                obj.bio_residues_to_thermal.rigidplastic+obj.mrf_residues_to_thermal.rigidplastic*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentRigidPlastic'));
            
            % Textiles stream
            obj.total_incineration_input.textiles = obj.restwaste_to_thermal.textiles+...
                obj.bio_residues_to_thermal.textiles+obj.mrf_residues_to_thermal.textiles*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentTextiles'));
            
            % Organics stream
            obj.total_incineration_input.organics = obj.restwaste_to_thermal.organics+...
                obj.bio_residues_to_thermal.organics+obj.mrf_residues_to_thermal.organics*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentOrganics'));
            
            % Other stream
            obj.total_incineration_input.other = obj.restwaste_to_thermal.other+...
                obj.bio_residues_to_thermal.other+obj.mrf_residues_to_thermal.other*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentOther'));
            
            % Compost stream
            % Note that compost inputs to incineration arise only from the
            % biological treatment process
            obj.total_incineration_input.compost = obj.bio_residues_to_thermal.compost*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentCompost'));
            
            % Total incineration input
            TotalIncinerationInput = obj.total_incineration_input.paper+...
                obj.total_incineration_input.glass+...
                obj.total_incineration_input.fe_metal+...
                obj.total_incineration_input.nonfe_metal+...
                obj.total_incineration_input.filmplastic+...
                obj.total_incineration_input.rigidplastic+...
                obj.total_incineration_input.textiles+...
                obj.total_incineration_input.organics+...
                obj.total_incineration_input.other+...
                obj.total_incineration_input.compost;
            
            % Define Incineration Variables
            Incineration = IncinerationVariables;
            
            % Determine calorific value of process input (in G/tonne)
            if TotalIncinerationInput > 0
                obj.incineration_energy_output = [obj.total_incineration_input.paper,...
                    obj.total_incineration_input.glass,...
                    obj.total_incineration_input.fe_metal,...
                    obj.total_incineration_input.nonfe_metal,...
                    obj.total_incineration_input.filmplastic,...
                    obj.total_incineration_input.rigidplastic,...
                    obj.total_incineration_input.textiles,...
                    obj.total_incineration_input.organics,...
                    obj.total_incineration_input.other,...
                    obj.total_incineration_input.compost]*...
                    [Incineration.calorific_value.paper;...
                    Incineration.calorific_value.glass;...
                    Incineration.calorific_value.fe_metal;...
                    Incineration.calorific_value.nonfe_metal;...
                    Incineration.calorific_value.filmplastic;...
                    Incineration.calorific_value.rigidplastic;...
                    Incineration.calorific_value.textiles;...
                    Incineration.calorific_value.organics;...
                    Incineration.calorific_value.other;...
                    Incineration.calorific_value.compost]*...
                    thermal.GetNodeTypeAttributeValue('incinerationEnergyRecoveryEfficiency')*277.78;
                % 277.78 factor is to convert from GJ to kWh
            else
                obj.incineration_energy_output = 0;
            end
                       
            %% Determine amount of ferrous metal recovered from bottom ash
            obj.ferrous_metal_recovered = obj.total_incineration_input.fe_metal*...
                Incineration.non_hazardous_residues.fe_metal*...
                Incineration.fe_metal_recovery_percent;

            %% RDF Burning Process
            % Define RDF burning variables
            rdf = RDFBurningVariables;
            
            % Calculate energy generated from cRDF and dRDF
            % cRDF Burning
            obj.cRDF_energy_output = obj.cRDF_extracted*...
                rdf.calorific_value.cRDF*...
                thermal.GetNodeTypeAttributeValue('cRDFBurningEnergyRecoveryEfficiency')*277.78;
                % 277.78 factor is to convert from GJ to kWh
            
            % dRDF Burning
            obj.dRDF_energy_output = obj.dRDF_extracted*...
                rdf.calorific_value.dRDF*...
                thermal.GetNodeTypeAttributeValue('dRDFBurningEnergyRecoveryEfficiency')*277.78;
                % 277.78 factor is to convert from GJ to kWh
            
            %% PPDF Burning
            % Define PPDF burning variables
            ppdf = PPDFBurningVariables;
            
            % Calculate energy generated from PPDF burning
            obj.PPDF_energy_output = obj.mrf_recyclables_to_PPDF.paper*...
                ppdf.calorific_value.paper+...
                (obj.mrf_recyclables_to_PPDF.filmplastic+...
                obj.mrf_recyclables_to_PPDF.rigidplastic)*...
                ppdf.calorific_value.plastic*...
                thermal.GetNodeTypeAttributeValue('PPDFBurningEnergyRecoveryEfficiency')*277.78;
                % 277.78 factor is to convert from GJ to kWh
                
            %% Determine non-hazardous and hazardous residues to landfill
            % Non-hazardous incineration residues arise from the residues 
            % extracted during the presorting process, as well as the non-
            % hazardous residues generated from the incineration
            % process
            % Hazardous residues arise only from the incineration process
            % Note that a fuels stream is also added to both non-hazardous
            % and hazardous streams. This represents the hazardous
            % and non-hazardous residues generated from burning RDF and
            % PPDF
            
            % Paper stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.paper = (obj.restwaste_to_thermal.paper+...
                obj.bio_residues_to_thermal.paper+obj.mrf_residues_to_thermal.paper)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentPaper')+...% Presort residues
                obj.total_incineration_input.paper*Incineration.non_hazardous_residues.paper*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.paper = obj.total_incineration_input.paper*...
                Incineration.hazardous_residues.paper;   % Hazardous process residues
            
            % Glass stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.glass = (obj.restwaste_to_thermal.glass+...
                obj.bio_residues_to_thermal.glass+obj.mrf_residues_to_thermal.glass)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentGlass')+...% Presort residues
                obj.total_incineration_input.glass*Incineration.non_hazardous_residues.glass*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.glass = obj.total_incineration_input.glass*...
                Incineration.hazardous_residues.glass;   % Hazardous process residues
            
            % Ferrous metals stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.fe_metal = (obj.restwaste_to_thermal.fe_metal+...
                obj.bio_residues_to_thermal.fe_metal+obj.mrf_residues_to_thermal.fe_metal)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentFeMetal')+...% Presort residues
                obj.total_incineration_input.fe_metal*Incineration.non_hazardous_residues.fe_metal*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.fe_metal = obj.total_incineration_input.fe_metal*...
                Incineration.hazardous_residues.fe_metal;   % Hazardous process residues
            
            % Non-ferrous metals stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.nonfe_metal = (obj.restwaste_to_thermal.nonfe_metal+...
                obj.bio_residues_to_thermal.nonfe_metal+obj.mrf_residues_to_thermal.nonfe_metal)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentNonFeMetal')+...% Presort residues
                obj.total_incineration_input.nonfe_metal*Incineration.non_hazardous_residues.nonfe_metal*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.nonfe_metal = obj.total_incineration_input.nonfe_metal*...
                Incineration.hazardous_residues.nonfe_metal;   % Hazardous process residues
            
            % Film plastics stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.filmplastic = (obj.restwaste_to_thermal.filmplastic+...
                obj.bio_residues_to_thermal.filmplastic+obj.mrf_residues_to_thermal.filmplastic)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentFilmPlastic')+...% Presort residues
                obj.total_incineration_input.filmplastic*Incineration.non_hazardous_residues.filmplastic*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.filmplastic = obj.total_incineration_input.filmplastic*...
                Incineration.hazardous_residues.filmplastic;   % Hazardous process residues
            
            % Rigid plastics stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.rigidplastic = (obj.restwaste_to_thermal.rigidplastic+...
                obj.bio_residues_to_thermal.rigidplastic+obj.mrf_residues_to_thermal.rigidplastic)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentRigidPlastic')+...% Presort residues
                obj.total_incineration_input.rigidplastic*Incineration.non_hazardous_residues.rigidplastic*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.rigidplastic = obj.total_incineration_input.rigidplastic*...
                Incineration.hazardous_residues.rigidplastic;   % Hazardous process residues
            
            % Textiles stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.textiles = (obj.restwaste_to_thermal.textiles+...
                obj.bio_residues_to_thermal.textiles+obj.mrf_residues_to_thermal.textiles)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentTextiles')+...% Presort residues
                obj.total_incineration_input.textiles*Incineration.non_hazardous_residues.textiles*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.textiles = obj.total_incineration_input.textiles*...
                Incineration.hazardous_residues.textiles;   % Hazardous process residues
            
            % Organics stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.organics = (obj.restwaste_to_thermal.organics+...
                obj.bio_residues_to_thermal.organics+obj.mrf_residues_to_thermal.organics)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentOrganics')+...% Presort residues
                obj.total_incineration_input.organics*Incineration.non_hazardous_residues.organics*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.organics = obj.total_incineration_input.organics*...
                Incineration.hazardous_residues.organics;   % Hazardous process residues
            
            % Other stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.other = (obj.restwaste_to_thermal.other+...
                obj.bio_residues_to_thermal.other+obj.mrf_residues_to_thermal.other)*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentOther')+...% Presort residues
                obj.total_incineration_input.other*Incineration.non_hazardous_residues.other*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.other = obj.total_incineration_input.other*...
                Incineration.hazardous_residues.other;   % Hazardous process residues
            
            % Compost stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.compost = obj.bio_residues_to_thermal.compost*...
                thermal.GetNodeTypeAttributeValue('incinerationPresortResiduePercentCompost')+...% Presort residues
                obj.total_incineration_input.compost*Incineration.non_hazardous_residues.compost*...
                (1-thermal.GetNodeTypeAttributeValue('incinerationBottomAshFractionReused'));   % Non-hazardous process residues (note that fraction of bottom ash reused is subtracted from this portion)
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.compost = obj.total_incineration_input.compost*...
                Incineration.hazardous_residues.compost;   % Hazardous process residues
            
            % Fuels stream
            % Non-hazardous materials to landfill
            obj.non_hazardous_residues_to_landfill.fuels = obj.cRDF_extracted*rdf.non_hazardous_residues.cRDF+... %cRDF burning non-hazardous residue
                obj.dRDF_extracted*rdf.non_hazardous_residues.dRDF+... %dRDF burning non-hazardous residue
                obj.mrf_recyclables_to_PPDF.paper*ppdf.non_hazardous_residues.paper+... %paper burning non-hazardous residues
                (obj.mrf_recyclables_to_PPDF.filmplastic+obj.mrf_recyclables_to_PPDF.rigidplastic)*...
                ppdf.non_hazardous_residues.plastic; %plastic burning non-hazardous residues
            
            % Hazardous materials to landfill
            obj.hazardous_residues_to_landfill.fuels = obj.cRDF_extracted*rdf.hazardous_residues.cRDF+...  %cRDF burning hazardous residues
                obj.dRDF_extracted*rdf.hazardous_residues.dRDF+...  %dRDF burning hazardous residues   
                obj.mrf_recyclables_to_PPDF.paper*ppdf.hazardous_residues.paper+... %paper burning hazardous residues
                (obj.mrf_recyclables_to_PPDF.filmplastic+obj.mrf_recyclables_to_PPDF.rigidplastic)*...
                ppdf.hazardous_residues.plastic; %plastic burning hazardous residues
            
            %% Assign null value to val
            val = [];
            
        end
    end
end