%% TotalCommercialWater Class Definition
% The TotalCommercialWater behavior calculates the total amount of
% commercial water demand generated by the city by application type. 
% The application types are as follows:
% - Kitchen
% - Faucets
% - Toilets
%
% 21-August, 2011
% Afreen Siddiqi, siddiqi@mit.edu
%%
classdef TotalCommercialWater < Behavior
    properties
        kitchen;    % the total water demand for kitchen use
        faucets;    % the total water demand for faucets use
        toilets;    % the total water demand for toilets use
    end
    methods
        %% TotalCommercialWater Constructor
        % Instantiates a new TotalCommercialWater object.
        % 
        % obj = TotalCommercialWater()
        %   obj:            the new TotalCommercialWater object
        %   kitchen:    % the total water demand for kitchen use 
        %   facuets:    % the total water demand for faucet use 
        %   toilets:    % the total water demand for toilets use 
  

        function obj = TotalCommercialWater()
            obj = obj@Behavior('Total Commercial Water Demand per Year', ...
                ['Calculates the total commercial water demand ' ...
                'in the city by application type.'], ...
                'cubic meters','[0,inf)');
        end
    end
    methods(Access=protected)
        %% EvaluateImpl Function
        % Evaluates the behavior for a specified city. Note: the
        % superclass Evaluate function should be used for evaluation during
        % execution.
        %
        % val = obj.EvaluateImpl(city)
        %   val:    the evaluated value
        %   obj:    the TotalCommercialWater object handle
        function val = EvaluateImpl(obj)
            
            % For each building system node, identify commercial node and
            % calculate corresponding water demand per node by application.
            % Following this, sum all application values
            
            city = CityNet.instance().city;
            
            % Search for building system identifier       
            for i = 1:length(city.systems)
                if strcmp(city.systems(i).name,'Building')==1
                    ind = i;
                    break
                end
            end      
            
            
            % Initialize water values
            TotalWater = 0;
            TotalKitchenDemand = 0;
            TotalFaucetsDemand = 0;
            TotalToiletsDemand = 0;
     
            
            % For each building system node
            for j = 1:length(city.systems(ind).nodes)
                % If the node is a commercial node
                if strcmp(city.systems(ind).nodes(j).type.name,'Commercial')==1
                    % Determine amount of water required in node by application
                    
                    % Total Water per node = Water Demand per area x Node Area
             
                    totalnodalwater = city.systems(ind).nodes(j).cell.GetArea()*...
                    city.systems(ind).nodes(j).GetNodeTypeAttributeValue('commercialWaterPerArea');
                    
                    TotalWater = TotalWater + totalnodalwater;
                
                    % Determine Individual Water Application Fractions by Node
                    TotalKitchenDemand = TotalKitchenDemand + totalnodalwater*...
                        city.systems(ind).nodes(j).GetNodeTypeAttributeValue('commercialWaterKitchenPercent');
                    
                    TotalFaucetsDemand = TotalFaucetsDemand + totalnodalwater*...
                        city.systems(ind).nodes(j).GetNodeTypeAttributeValue('commercialWaterFaucetsPercent');

                    
                    TotalToiletsDemand = TotalToiletsDemand + totalnodalwater*...
                        city.systems(ind).nodes(j).GetNodeTypeAttributeValue('commercialWaterToiletsPercent');
                    
            
                end
            end
            
            
            
            %% Assign Outputs
            % Assign values to each handle in class
            % Multiply by 365 to convert daily demand to annual demand 
            val = TotalWater*365;
            obj.kitchen = TotalKitchenDemand*365;
            obj.faucets = TotalFaucetsDemand*365;
            obj.toilets = TotalToiletsDemand*365;
            
            
        end
    end
end